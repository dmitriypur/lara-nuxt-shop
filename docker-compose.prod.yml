version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.prod
    container_name: nuxt-shop-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    networks:
      - nuxt-shop
    depends_on:
      - mysql
      - redis
      - meilisearch

  nginx:
    image: nginx:alpine
    container_name: nuxt-shop-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites-available:/etc/nginx/sites-available
      - ./docker/ssl:/etc/nginx/ssl
    networks:
      - nuxt-shop
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    container_name: nuxt-shop-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-nuxt_shop}
      MYSQL_USER: ${DB_USERNAME:-nuxt_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secure_password}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_secure_password}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    ports:
      - "3306:3306"
    networks:
      - nuxt-shop
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:7-alpine
    container_name: nuxt-shop-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - nuxt-shop
    command: redis-server /usr/local/etc/redis/redis.conf

  meilisearch:
    image: getmeili/meilisearch:v1.5.0
    container_name: nuxt-shop-meilisearch
    restart: unless-stopped
    environment:
      MEILI_MASTER_KEY: ${MEILISEARCH_KEY:-your_master_key}
      MEILI_ENV: production
    volumes:
      - meilisearch_data:/meili_data
    ports:
      - "7700:7700"
    networks:
      - nuxt-shop

  # Опционально: MinIO для файлового хранилища
  # minio:
  #   image: minio/minio:latest
  #   container_name: nuxt-shop-minio
  #   restart: unless-stopped
  #   environment:
  #     MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
  #     MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
  #   volumes:
  #     - minio_data:/data
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   networks:
  #     - nuxt-shop
  #   command: server /data --console-address ":9001"

  # Supervisor для очередей
  queue:
    build:
      context: .
      dockerfile: docker/Dockerfile.prod
    container_name: nuxt-shop-queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
    networks:
      - nuxt-shop
    depends_on:
      - mysql
      - redis
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600

  # Планировщик задач
  scheduler:
    build:
      context: .
      dockerfile: docker/Dockerfile.prod
    container_name: nuxt-shop-scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - ./docker/cron/crontab:/etc/cron.d/laravel-scheduler
    networks:
      - nuxt-shop
    depends_on:
      - mysql
      - redis
    command: cron -f

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  meilisearch_data:
    driver: local
  # minio_data:
  #   driver: local

networks:
  nuxt-shop:
    driver: bridge