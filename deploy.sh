#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Nuxt Shop
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh [production|staging]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_success() {
    echo -e "${GREEN}‚úì $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö† $1${NC}"
}

print_error() {
    echo -e "${RED}‚úó $1${NC}"
}

print_info() {
    echo -e "$1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
ENV=${1:-production}

print_info "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Nuxt Shop (–æ–∫—Ä—É–∂–µ–Ω–∏–µ: $ENV)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
print_info "\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PHP
if ! command -v php &> /dev/null; then
    print_error "PHP –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

PHP_VERSION=$(php -r "echo PHP_MAJOR_VERSION.'.'.PHP_MINOR_VERSION;")
if [[ "$PHP_VERSION" < "8.2" ]]; then
    print_error "–¢—Ä–µ–±—É–µ—Ç—Å—è PHP 8.2+, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è $PHP_VERSION"
    exit 1
fi
print_success "PHP $PHP_VERSION"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Composer
if ! command -v composer &> /dev/null; then
    print_error "Composer –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi
print_success "Composer $(composer --version --no-ansi | cut -d' ' -f3)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ MySQL
if ! command -v mysql &> /dev/null; then
    print_warning "MySQL –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ MySQL —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    print_success "MySQL –∫–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω"
fi

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é backend
cd backend

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
print_info "\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if [ "$ENV" = "production" ]; then
    composer install --optimize-autoloader --no-dev --no-interaction
else
    composer install --optimize-autoloader --no-interaction
fi
print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
print_info "\n‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
if [ ! -f .env ]; then
    cp .env.example .env
    print_warning "–°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª –∏–∑ .env.example. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º!"
    print_info "–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
    print_info "- APP_URL (URL –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞)"
    print_info "- DB_* (–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)"
    print_info "- MAIL_* (–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—á—Ç—ã)"
    print_info "- –î—Ä—É–≥–∏–µ —Å–µ—Ä–≤–∏—Å—ã (Redis, Meilisearch)"
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞..."
fi

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if ! grep -q "APP_KEY=base64:" .env; then
    php artisan key:generate --force
    print_success "–ö–ª—é—á –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω"
else
    print_success "–ö–ª—é—á –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π —Å—Å—ã–ª–∫–∏ –¥–ª—è storage
if [ ! -L public/storage ]; then
    php artisan storage:link
    print_success "–°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è storage —Å–æ–∑–¥–∞–Ω–∞"
fi

# –ú–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
print_info "\nüóÑÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if [ "$ENV" = "production" ]; then
    php artisan migrate --force
else
    php artisan migrate
fi
print_success "–ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"

# –°–∏–¥–µ—Ä—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è staging)
if [ "$ENV" = "staging" ]; then
    php artisan db:seed
    print_success "–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
fi

# –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
if [ "$ENV" = "production" ]; then
    print_info "\nüöÄ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞..."
    
    php artisan config:cache
    print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∞"
    
    php artisan route:cache
    print_success "–ú–∞—Ä—à—Ä—É—Ç—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω—ã"
    
    php artisan view:cache
    print_success "–®–∞–±–ª–æ–Ω—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω—ã"
    
    php artisan event:cache
    print_success "–°–æ–±—ã—Ç–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω—ã"
else
    print_info "\nüßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
    php artisan config:clear
    php artisan route:clear
    php artisan view:clear
    php artisan cache:clear
    print_success "–ö—ç—à –æ—á–∏—â–µ–Ω"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
print_info "\nüîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
chmod -R 775 storage bootstrap/cache
print_success "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
print_info "\nüåê –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–µ:"
print_info "Document Root –¥–æ–ª–∂–µ–Ω —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞: $(pwd)/public"
print_info "–ü—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx:"
print_info ""
print_info "server {"
print_info "    listen 80;"
print_info "    server_name yourdomain.com;"
print_info "    root $(pwd)/public;"
print_info ""
print_info "    add_header X-Frame-Options \"SAMEORIGIN\";"
print_info "    add_header X-Content-Type-Options \"nosniff\";"
print_info ""
print_info "    index index.php;"
print_info ""
print_info "    charset utf-8;"
print_info ""
print_info "    location / {"
print_info "        try_files \$uri \$uri/ /index.php?\$query_string;"
print_info "    }"
print_info ""
print_info "    location = /favicon.ico { access_log off; log_not_found off; }"
print_info "    location = /robots.txt  { access_log off; log_not_found off; }"
print_info ""
print_info "    error_page 404 /index.php;"
print_info ""
print_info "    location ~ \\.php\$ {"
print_info "        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;"
print_info "        fastcgi_param SCRIPT_FILENAME \$realpath_root\$fastcgi_script_name;"
print_info "        include fastcgi_params;"
print_info "    }"
print_info ""
print_info "    location ~ /\\.(?!well-known).* {"
print_info "        deny all;"
print_info "    }"
print_info "}"

print_success "\nüéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
print_info "\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
print_info "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä (Nginx/Apache)"
print_info "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
print_info "3. –°–æ–∑–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: php artisan make:filament-user"
print_info "4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ cron –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á:"
print_info "   * * * * * cd $(pwd) && php artisan schedule:run >> /dev/null 2>&1"
print_info "5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ supervisor –¥–ª—è –æ—á–µ—Ä–µ–¥–µ–π (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è)"
print_info "\n–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: {APP_URL}/admin"

print_success "–ì–æ—Ç–æ–≤–æ! üöÄ"